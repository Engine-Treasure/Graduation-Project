# 算法作曲摘要

- 算法作曲是指`使用形式化的作曲规则作为音乐创作的手段`, 以使音乐家们可以利用计算机作为音乐创作的工具, 使人的介入程度最小, 实现自动作曲 (关键词: 形式化)
- 东西方音乐都有一定程度的形式化基础
- 在算法作曲中使用的技术包括: 随机过程、音乐文法、分形、混沌、专家系统、神经网络和遗传算法
- 在音乐创作领域, 组成音乐的元素例如音高、时值很容易用数字表示, 而作曲的方法例如音乐材料的发展手段等又和遗传算法中的进化操作有异曲同工之处. 因此, 把遗传算法推广到在音乐空间的搜索, 产生符合音乐规则的乐曲是非常有效和可行的
- 当前的算法作曲系统, 包括进化作曲系统, 大多数都是完成作曲的一个子任务, 系统输出的旋律并不一定是能够直接演奏的完整音乐作品.
- 完成一个音乐内容的创作, 涉及调性的选择及变化, 纵向的音高排列, 横向的和声连接、声部对位, 节奏穿插, 音色的选取及搭配、节拍的变化 、速度的变化等很多过程. 因此可以说旋律的创作、和声配置、声部的对位、织体创作、编曲等等, 这些过程都是在作曲
- 音列技术的引入与进一步系列化: 音乐被特征化地提取出诸如音高, 音长 (时值), 音色的参量并加以分别控制. 每个参量中, 依次选择可能的值就可以组织成一个音列. 参量的值可以根据当前音列或该音列的倒置或逆行进行变化

![Evolutionary music system structure](进化作曲系统结构图.png)

- 根据适应度计算方法的不同, 进化作曲系统主要分为: 自动进化系统和交互式进化系统
- 自动进化
    - 适应度函数设计的规则大都基于基本的音乐作曲理论, 包括音高的范围、音程的范围、旋律的稳定性、音符和终止符的密度、旋律的变化、和弦的规律、和声逻辑等. 根据作曲目标的不同, 适应度函数的定义各有差异
- 交互式进化
    - 根据外部用户的打分来计算适应度
- 作曲系统可以通过建立适应函数的计算模型来`演化旋律`(染色体)或`连接旋律的和声结构`.

## 算法作曲研究中存在的问题

### 音乐的知识表达问题

- 音乐的知识表达问题涉及如何建立音乐的`表层结构`和音乐`深层逻辑`的对应关系
- 在以调性、传统和声为基础的主调音乐的多声部 (为主旋律配置其他声部) 创作系统中, 多采用符号化的规则表达模式, 以使系统变得更为有效
- 对于试图模拟某位作曲家或某一时代特定风格的旋律生成系统, 则可以通过收集该作曲家或代表这一时代风格的作品来训练一个人工神经网络

### 创造性与人机交互性问题

- 创造性应是以听众的知识、直觉以及美学标准为其判断基础的. 这涉及到需要模拟作曲家自身的音乐创作过程, 还是要模拟创作的结果的问题, 二者的关系就是要建立作曲家认知模型还是音乐知识工程的问题
- Bruce L Jacob 认为, 创新来自两个方面: “天资”和“努力”. 后者是编辑一个算法以图在重复音乐创作过程时能获取某些最优化的功效. 算法作曲系统的目标只能是再现作曲家以“努力”的方式创作音乐.
- 遗传算法就可以深刻模拟音乐家“努力”创作音乐的过程。如遗传操作中的选择操作就可以模拟音乐家根据自己的知识和经验选择用于后续创作的种子; 交叉操作可以模拟音乐家综合不同乐曲的长处, 来产出新的更好的乐曲; 突变操作则可以模拟音乐家在创作乐曲过程中灵感

### 音乐创作风格问题

- 人工神经网络方法 - 回避了人们难以对音乐创作风格给予一个清晰的定义所采用的一种作曲系统的研究方法
- 另一种方法: 将音乐创作视为一个互相拼凑的超级过程 - 把已故作曲大师一系列作品的例子编码成若干模式, 并将其存放在一个数据库中. 然后, 使用若干计算函数来填充模式中缺省的内容, 从而构造出已故作曲家作曲风格的新作品 (`SPEAC 音乐分析模型` 计算和获取音乐作品中的风格特征)

### 系统生成的作品质量评估问题

- 作曲系统中的质量评估机制是一个很重要的部分. 它往往会引导创作的方向, 甚至最终确定作品的成败. 可以在一个作曲系统中建立形式规则库, 以此对系统生成旋律作质量评估.
- 例如, 可以建立一系列旋律的约束集合. 旋律的质量可以通过测试其是否能很好地匹配一个给定的约束集合来评估

## 进化作曲系统实例

### Horner 计算机辅助作曲程序

> `复调音乐`的创作几乎完全可以通过诸如对给定的主题动机 (一个音乐小片段) 实施倒影, 主题延长, 缩减等系统化过程来演绎

- 主题桥接 (从一个原始音乐动机, 经过一系列变换, 最终生成目标动机). 变换包括删除音符, 旋转, 突变, 交换等操作.
- 适应度分两步计算: 首先衡量经过桥变换后的动机与目标动机的匹配度, 这个匹配度既考虑相同音符的比例, 也考虑音符顺序的匹配程度; 然后进一步计算适应度, 考虑音符长度的匹配程度, 如果长度也是精确匹配, 个体的适应度将达到最大值.

### 十二音体系的组成

- 十二音体系是勋伯格创立的无调性音乐体系: 1 个八度里所有的 12 个半音都是平等的, 在一个音出现以后, 其他 11 个半音出现之前, 该音不能重复使用, 以免形成调性中心.
- 十二音作曲法中, 首先要有 1 个 12 个半音组成的 1 个音列, 称之为种子序列或原形 O (Original), 从原形又可以派生出序列的几种变形, 包括逆行 R (Retrograde)、倒影 I (Inversion)、倒影逆行 RI (Retrogradeof Inversion) 等

### GenJam

- GenJam 中的算法设计了 2 个分层的关联种群: 乐节种群和乐句种群. 一个乐节定义为 8 个音符组成的小节, 一个乐句包含 4 小节. 两个种群各自进化, 有各自的变异和交叉运算
- 乐句个体的适应度并不是由其中的 4 个乐节的适应度相加即可得, 4 个高适应度的乐节组成的乐句不一定好听.
- GenJam 采用交互式遗传算法进行进化, 系统没有适应度函数, 个体的适应度通过和音乐导师交互获得. 乐节的适应度决定乐句的某些变异操作
- GenJam 进化过程中, 乐节种群包含 64 个个体, 乐句种群包含 48 个个体, 每代进化产生 50 % 的新个体.
- Autonomous GenJam: 选择很多 4 小节爵士乐句, 根据不同风格, 建立 10 个爵士乐数据库. 数据库作为乐节和乐句的种子材料, 初始种群从这些数据库中随机选择产生, 以保证个体符合爵士乐的风格. 进化阶段不使用适应度函数, 省略导师的交互评分阶段, 个体的选择根据爵士乐数据库中的风格特征进行

### 遗传创意曲

- 巴赫创意曲 - 利用一个乐思产生的动机或主题, 使用各种技巧使之发展, 包括逆向形, 扩大形, 缩小形; 或用卡农的方式
- 卡农 - 复调音乐的写作技法之一, 利用对立法的模仿技法. 所有的声部都模仿一个声部, 但不同高度的声部依一定间隔进入, 造成一种此起彼伏, 连绵不断的效果. 卡农中, 最先出现的旋律是导句, 以后模仿的是答句.
    - 根据各声部高度不同的音程差，可分为同度卡农，五度卡农，四度卡农等；
    - 根据间隔的时间长短，可分为一小节卡农，两小节卡农等；
    - 此外还有伴奏卡农，转位卡农，逆行卡农，反行卡农，摇滚卡农等各种手法。
- 动机 - 创意曲最重要的核心片段, 是有意识地准备将它作为 (并用于) 复调乐曲发展构成的基础和原型的一个简短旋律句子.
- 音乐领域知识可存放在:
    - 染色体中: 音乐信息 (即音高、音程、时值、音长) 被描述在染色体中;
    - 选择过程: 适应函数判断每个染色体的适应度并决定染色体的再生机会;
    - 再生操作: 搜索控制知识嵌入于再生操作中. 使用再生操作可保证所有状态空间的点均可搜索得到.
- 音高通过音列的范围来表现的, 而不同的八度音阶则可以以不同的整数相区别, 音程和拍子的间隔也可以用整数来表现。由于在旋律中音程和谐性的重要, 在选取音符时可能会出现不和谐音, 这时需要用适应度函数将其加以剔除
- 根据染色体的特征信息和动机创作的基本规则, 为其赋予不同的权值来得到适应度函数:
    - 大音程 - 设置音符间取值范围和音符间的最大间距来解决音程过大问题. 当音程过大时, 该位置音符的个体适应度会被赋予一个很低的值
    - 和谐音程 - 为一个种群中相邻的音符之间音程赋予不同的权值, 满足和谐音程的个体权值为正, 反之为负
    - 主和弦印象 - 对动机片段来说, 音符简单地做到和谐音程是不足的, 根据动机的创作原则, 需要能够体现主和弦现象.
    - 禁止音符 F 和 A 出现在动机的首尾 - 一个音阶中 F 和 A 被认为是不稳定音.
- 交叉算子 - 由于乐曲片段的小节性, 为了保证音符整体的连贯性, 采用单点交叉的方法
- 变异算子 - 变异算子能使动机朝更多变, 和谐的方向发展. 变异主要是对单个音符的变异, 随机选择一个音符用新的音符来代替, 或直接换成一个稍高或稍低的音符.
- 终止条件:
    - Generations: 指明算法的最大重复执行次数
    - Stall generations: 如果适应度值在 Stall generation 指明的代数没有改进, 停止算法
    - Stall time: 如果最好适应度值在 Stall time 时间间隔内没有改进, 停止算法
- 应用遗传算法实现乐曲的效果取决于创作中音乐知识的表示, 也就是规则的设立以及适应度函数的选取。如果规则制定的越精细, 那么得到的乐曲也就会越精确。

### 一种基于遗传算法的作曲方法 - 卿武明

- 为了比较精确的表达音乐信息, 系统采用音程差法来对音乐进行编码, 即音高特性采用了与上一位音符的音程差来记录 (包括首尾音符与调式主音的音程差), 这样编码可以更好地表达所谓的音乐旋律线的特性, 并且更加适用于遗传算法对音乐的操作, 消除了直接用音高编码经遗传算法后乐句中产生大副度的音高变化的不足。
- 除了音长, 音程差, 音速, 节拍等信息外, 系统还为每一位音符增加了遗传操作标识位和特殊音符标识位, 为每一个乐句赋予起始音值
- 系统采用乐段作为遗传算法的操作对象. 乐段是音乐作品中表现完整乐思或相对完整乐思的最小结构, 是建立在单一主题上的、最小的完整曲式. 乐段的结构规模一般不太长, 但形式完整、统一, 能体现鲜明的音乐形象。乐段常由几个乐句组成, 这些乐句之间具有问答呼应的关系
- 乐段内的乐句结构可分为重复型, 并置型和 "起承转合" 型. 乐句之间互相用终止式分开, 又通过终止式的功能关系联合成有机的曲式结构. 在主旋律中, 终止式表现为乐段中各乐句的终止音符的音高与调试主音之间的音程差.
- 为能够按照用户的情感因素产生用户所需的音乐片段, 系统为每段乐段赋予了若干模糊特征, 按百分比反应了乐段的音乐风格. 并用这些特征值来描述适应度函数, 通过特征值来计算一个特征描述精确值来衡量子乐段是否符合用户的需求
- 音乐质量保证手段:
    - 建立一个系统乐段库, 初始种群从系统乐段库中选取而不是随机生成.
    - 对交叉和变异进行严格的规范, 对音乐信息的精确编码
    - 建立一个系统调式库, 对产生的半音阶乐段进行半音的导向转换. 调式库在保证音乐质量的同时, 还让音乐更加风格化

![Qing's Evolutionary Music System Structure](卿武明进化作曲系统结构.png)
