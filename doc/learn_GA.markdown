# 遗传算法 (GA) 学习笔记

> 一言以蔽之: 用生物进化的过程, 来模拟问题求解的过程, 通过选择(复制), 交叉, 突变等操作产生下一代的解, 并逐步淘汰掉适应度函数值低的解, 增加适应度函数值高的解. 经过 N 代进化, 可能会进化出适应度函数值很高的个体 (近似最优解).

## 术语

- 种群 (population):
- 基因 (gene):
- 染色体 (chromosome):
-

## GA 特点

- 优
    - 群体搜索, 易于并行化处理;
    - 不是盲目穷举，而是启发式搜索;
    - 适应度函数不受连续, 可微等条件的约束, 适用范围很广
    - 容易实现. 一旦有了一个遗传算法的程序, 如果想解决一个新的问题, 只需针对新的问题重新进行基因编码就行; 如果编码方法也相同, 那只需要改变一下适应度函数就可以了
- 缺
    - 全局搜索能力不强, 很容易陷入局部最优解跳不出来; (可结合SA进行改进,因为SA在理率上是100%得到全局最优的,但搜索代价高)

## GA 的组成

- 编码- 产生初始种群
- 适应度函数
- 遗传算子 - 选择, 交叉, 变异
- 运行参数?

### 编码

- 将问题的解编码成字符串的形式
- 常见的编码方式：
    - 二进制编码 (常用于解决 01 背包问题)
        - 改进方案: 动态编码, 实数编码
    - 互换编码 (用于解决排序问题)
    - 树形编码 (用于遗传规划中的演化编程或表示)
    - 值编码

### 适应度函数

- 适应度函数与目标函数是正相关的, 可对目标函数作一些变形得到适应度函数

### 遗传算子

#### 选择

- 一种常用的选择策略: `轮盘赌算法`
    - 改进方案: 竞争选择, 按需挑选

#### 交叉

- 对两个相互配对的染色体依据交叉概率按某种方式相互交换部分基因
- 产生新个体的主要方式

#### 变异

- 产生新个体的辅助方法, 决定了 GA 的局部搜索能力, 同时保持种群的多样性
- 交叉运算和变异运算的相互配合, 共同完成对搜索空间的全局搜索和局部搜索
- 变异概率太小, 降低全局搜索能力; 太大, GA 退化为随机搜索

### 运行参数

- 一般情况下使用 GA 时推荐的参数：
    - 交叉率, 一般应较大, 0.8 ~ 0.95
    - 变异率, 一般较小, 0.005 ~ 0.01
    - 种群的规模. 实验发现, 比较大的种群的规模并不能优化遗传算法的结果. 种群规模的大小取决于编码的方式
    - 终止进化代数. 连续 N 代出现的最优个体的适应度都一样时 (严格地说, 连续 N 代子代种群的最优个体适应度都 <= 父代最优个体的适应度)

## 基本遗传算法的优化

- 灾变
- 精英主义 (Elitist Strategy) 选择
- 矛盾

### 灾变

- 遗传算法的局部搜索能力较强, 但是很容易陷入局部极值
- 灾变就是杀掉最优秀的个体, 这样才可能产生更优秀的物种
- 何时进行灾变, 可以采用`灾变倒计数`的方式. 如果n代还没有出现比之前更优秀的个体时, 可以发生灾变. 灾变次数可以这样来确定, 如果若干次灾变后产生的个体的适应度与没灾变前的一样可停止灾变

### 精英主义选择

- 当利用交叉和变异产生新的一代时, 有很大的可能把在某个中间步骤中得到的最优解丢失
- 精英主义的思想: 当前最优解原封不动复制到新一代中

### 矛盾

### 插入操作

- 插入操作将染色体中的某个随机的片段移位到另一个随机的位置
